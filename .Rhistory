mutate(season = if_else(month %in%c("3","4","5"), "Summer",
if_else(month %in% c("6","7","8","9","10"), "Rainy",
if_else(month %in% c("11","12","1","2"), "Winter", "Others"))),.after = "date")
ltkprofile2021 <-
read_excel("rawdata/LTK_01012021_31122021.xlsx") %>%
rename_all(tolower) %>%
mutate(timestamp = as.POSIXct(timestamp, format = "%d-%b-%Y %H:%M", tz = "UTC"),
date = as.Date(timestamp, format = "%d-%b-%Y"),
time = format(as.POSIXct(timestamp), format = "%H:%M:%S"),
year = year(timestamp),
month = month(timestamp),
weekday = weekdays(timestamp),
yday = yday(timestamp),
day = day(timestamp),
hour = hour(timestamp),
minute = minute(timestamp)) %>%
filter(minute == "30" | minute =="0") %>%
mutate(season = if_else(month %in%c("3","4","5"), "Summer",
if_else(month %in% c("6","7","8","9","10"), "Rainy",
if_else(month %in% c("11","12","1","2"), "Winter", "Others"))),.after = "date")
ltkprofile2022 <-
read_excel("rawdata/LTK_01012022_31122022.xlsx") %>%
rename_all(tolower) %>%
mutate(timestamp = as.POSIXct(timestamp, format = "%d-%b-%Y %H:%M", tz = "UTC"),
date = as.Date(timestamp, format = "%d-%b-%Y"),
time = format(as.POSIXct(timestamp), format = "%H:%M:%S"),
year = year(timestamp),
month = month(timestamp),
weekday = weekdays(timestamp),
yday = yday(timestamp),
day = day(timestamp),
hour = hour(timestamp),
minute = minute(timestamp)) %>%
filter(minute == "30" | minute =="0") %>%
mutate(season = if_else(month %in%c("3","4","5"), "Summer",
if_else(month %in% c("6","7","8","9","10"), "Rainy",
if_else(month %in% c("11","12","1","2"), "Winter", "Others"))),.after = "date")
ggplotly(
ltkprofile2019 %>%
filter(day == 1 & month == 1 & year == 2019) %>%
ggplot(aes(x = timestamp, y = ltk_h))+
geom_line(aes(color = "red"),
show.legend = FALSE)+
geom_hline(yintercept = 0)+
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M")+
ThemeLine+
ggtitle("The 2019 Lamtakong Dam gen. profile \nat <span style = 'color: red'>minimum EGAT net gen.</span> at <span style = 'color: dodgerblue'> 10,523.8 MW </span> on <span style = 'color: red'> 1 Jan 2019 @ 12:00 PM </span>")+
labs(x = NULL,
y = "Electricity generation (MW)")
) %>%
style(showlegend = FALSE)
ggplotly(
ltkprofile2020 %>%
filter(day == 31 & month == 12 & year == 2020) %>%
ggplot(aes(x = timestamp, y = ltk_h))+
geom_line(aes(color = "red"),
show.legend = FALSE)+
geom_hline(yintercept = 0)+
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M")+
ThemeLine+
ggtitle("The 2020 Lamtakong Dam gen. profile \nat <span style = 'color: red'>minimum EGAT net gen.</span> at <span style = 'color: dodgerblue'> 11,530 MW </span> on <span style = 'color: red'> 31 Dec 2020 @ 13:00 PM </span>")+
labs(x = NULL,
y = "Electricity generation (MW)")
) %>%
style(showlegend = FALSE)
ggplotly(
ltkprofile2021 %>%
filter(day == 1 & month == 1 & year == 2021) %>%
ggplot(aes(x = timestamp, y = ltk_h))+
geom_line(aes(color = "red"),
show.legend = FALSE)+
geom_hline(yintercept = 0)+
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M")+
ThemeLine+
ggtitle("The 2021 Lamtakong Dam gen. profile \nat <span style = 'color: red'>minimum EGAT net gen.</span> at <span style = 'color: dodgerblue'> 9,876 MW </span> on <span style = 'color: red'> 1 Jan 2021 @ 12:30 PM </span>")+
labs(x = NULL,
y = "Electricity generation (MW)")
) %>%
style(showlegend = FALSE)
ggplotly(
ltkprofile2022 %>%
filter(day == 1 & month == 1 & year == 2022) %>%
ggplot(aes(x = timestamp, y = ltk_h))+
geom_line(aes(color = "red"),
show.legend = FALSE)+
geom_hline(yintercept = 0)+
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M")+
ThemeLine+
ggtitle("The 2022 Lamtakong Dam gen. profile \nat <span style = 'color: red'>minimum EGAT net gen.</span> at <span style = 'color: dodgerblue'> 11,547.85 MW </span> on <span style = 'color: red'> 1 Jan 2022 @ 12:30 PM </span>")+
labs(x = NULL,
y = "Electricity generation (MW)")
) %>%
style(showlegend = FALSE)
ggplotly(
ltkprofile2019 %>%
filter(day == 2 & month == 5 & year == 2019) %>%
ggplot(aes(x = timestamp, y = ltk_h))+
geom_line(aes(color = "red"),
show.legend = FALSE)+
geom_hline(yintercept = 0)+
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M")+
ThemeLine+
ggtitle("The 2019 Lamtakong Dam gen. profile \nat <span style = 'color: red'>Peak EGAT net gen. </span> at <span style = 'color: dodgerblue'> 30,853.2 MW </span> on <span style = 'color: red'> 2 May 2019 @ 22:30 PM </span>")+
labs(x = NULL,
y = "Electricity generation (MW)"
)
) %>%
style(showlegend = FALSE)
ggplotly(
ltkprofile2020 %>%
filter(day == 12 & month == 3 & year == 2020) %>%
ggplot(aes(x = timestamp, y = ltk_h))+
geom_line(aes(color = "red"),
show.legend = FALSE)+
geom_hline(yintercept = 0)+
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M")+
ThemeLine+
ggtitle("The 2020 Lamtakong Dam gen. profile \nat <span style = 'color: red'>Peak EGAT net gen. </span> at <span style = 'color: dodgerblue'> 28,636.7 MW </span> on <span style = 'color: red'> 12 Mar 2020 @ 20:30 PM </span>")+
labs(x = NULL,
y = "Electricity generation (MW)"
)
) %>%
style(showlegend = FALSE)
ggplotly(
ltkprofile2021 %>%
filter(day == 3 & month == 4 & year == 2021) %>%
ggplot(aes(x = timestamp, y = ltk_h))+
geom_line(aes(color = "red"),
show.legend = FALSE)+
geom_hline(yintercept = 0)+
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M")+
ThemeLine+
ggtitle("The 2021 Lamtakong Dam gen. profile \nat <span style = 'color: red'>Peak EGAT net gen. </span> at <span style = 'color: dodgerblue'> 30,135 MW </span> on <span style = 'color: red'> 3 Apr 2021 @ 21:00 PM </span>")+
labs(x = NULL,
y = "Electricity generation (MW)"
)
) %>%
style(showlegend = FALSE)
ggplotly(
ltkprofile2022 %>%
filter(day == 27 & month == 4 & year == 2022) %>%
ggplot(aes(x = timestamp, y = ltk_h))+
geom_line(aes(color = "red"),
show.legend = FALSE)+
geom_hline(yintercept = 0)+
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M")+
ThemeLine+
ggtitle("The 2022 Lamtakong Dam gen. profile \nat <span style = 'color: red'>Peak EGAT net gen. </span> at <span style = 'color: dodgerblue'> 32,254.5 MW </span> on <span style = 'color: red'> 27 Apr 2022 @ 22:30 PM </span>")+
labs(x = NULL,
y = "Electricity generation (MW)"
)
) %>%
style(showlegend = FALSE)
xybprofile2021 <-
read_excel("rawdata/XYB_01012021_31122021.xlsx") %>%
rename_all(tolower) %>%
mutate(timestamp = as.POSIXct(timestamp, format = "%d-%b-%Y %H:%M", tz = "UTC"),
date = as.Date(timestamp, format = "%d-%b-%Y"),
time = format(as.POSIXct(timestamp), format = "%H:%M:%S"),
year = year(timestamp),
month = month(timestamp),
weekday = weekdays(timestamp),
yday = yday(timestamp),
day = day(timestamp),
hour = hour(timestamp),
minute = minute(timestamp)) %>%
filter(minute == "30" | minute =="0") %>%
mutate(season = if_else(month %in%c("3","4","5"), "Summer",
if_else(month %in% c("6","7","8","9","10"), "Rainy",
if_else(month %in% c("11","12","1","2"), "Winter", "Others"))),.after = "date")
xybprofile2022 <-
read_excel("rawdata/XYB_01012022_31122022.xlsx") %>%
rename_all(tolower) %>%
mutate(timestamp = as.POSIXct(timestamp, format = "%d-%b-%Y %H:%M", tz = "UTC"),
date = as.Date(timestamp, format = "%d-%b-%Y"),
time = format(as.POSIXct(timestamp), format = "%H:%M:%S"),
year = year(timestamp),
month = month(timestamp),
weekday = weekdays(timestamp),
yday = yday(timestamp),
day = day(timestamp),
hour = hour(timestamp),
minute = minute(timestamp)) %>%
filter(minute == "30" | minute =="0") %>%
mutate(season = if_else(month %in%c("3","4","5"), "Summer",
if_else(month %in% c("6","7","8","9","10"), "Rainy",
if_else(month %in% c("11","12","1","2"), "Winter", "Others"))),.after = "date")
ggplotly(
xybprofile2021 %>%
filter(day == 1 & month == 1 & year == 2021) %>%
ggplot(aes(x = timestamp, y = ltk_h))+
geom_line(aes(color = "red"),
show.legend = FALSE)+
geom_hline(yintercept = 0)+
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M")+
ThemeLine+
ggtitle("The 2021 Xayaburi Hydro Power Plant gen. profile \nat <span style = 'color: red'>minimum EGAT net gen.</span> at <span style = 'color: dodgerblue'> 9,876 MW </span> on <span style = 'color: red'> 1 Jan 2021 @ 12:30 PM </span>")+
labs(x = NULL,
y = "Electricity generation (MW)")
) %>%
style(showlegend = FALSE)
ggplotly(
xybprofile2021 %>%
filter(day == 1 & month == 1 & year == 2021) %>%
ggplot(aes(x = timestamp, y = xyb_h))+
geom_line(aes(color = "red"),
show.legend = FALSE)+
geom_hline(yintercept = 0)+
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M")+
ThemeLine+
ggtitle("The 2021 Xayaburi Hydro Power Plant gen. profile \nat <span style = 'color: red'>minimum EGAT net gen.</span> at <span style = 'color: dodgerblue'> 9,876 MW </span> on <span style = 'color: red'> 1 Jan 2021 @ 12:30 PM </span>")+
labs(x = NULL,
y = "Electricity generation (MW)")
) %>%
style(showlegend = FALSE)
ggplotly(
xybprofile2021 %>%
filter(day == 1 & month == 1 & year == 2021) %>%
ggplot(aes(x = timestamp, y = xyb_h))+
geom_line(aes(color = "red"),
show.legend = FALSE)+
# geom_hline(yintercept = 0)+
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M")+
ThemeLine+
ggtitle("The 2021 Xayaburi Hydro Power Plant gen. profile \nat <span style = 'color: red'>minimum EGAT net gen.</span> at <span style = 'color: dodgerblue'> 9,876 MW </span> on <span style = 'color: red'> 1 Jan 2021 @ 12:30 PM </span>")+
labs(x = NULL,
y = "Electricity generation (MW)")
) %>%
style(showlegend = FALSE)
ggplotly(
xybprofile2021 %>%
filter(day == 1 & month == 1 & year == 2021) %>%
ggplot(aes(x = timestamp, y = xyb_h))+
geom_line(aes(color = "red"),
show.legend = FALSE)+
geom_hline(yintercept = 0)+
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M")+
ThemeLine+
ggtitle("The 2021 Xayaburi Hydro Power Plant gen. profile \nat <span style = 'color: red'>minimum EGAT net gen.</span> at <span style = 'color: dodgerblue'> 9,876 MW </span> on <span style = 'color: red'> 1 Jan 2021 @ 12:30 PM </span>")+
labs(x = NULL,
y = "Electricity generation (MW)")
) %>%
style(showlegend = FALSE)
ggplotly(
xybprofile2022 %>%
filter(day == 1 & month == 1 & year == 2022) %>%
ggplot(aes(x = timestamp, y = xyb_h))+
geom_line(aes(color = "red"),
show.legend = FALSE)+
geom_hline(yintercept = 0)+
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M")+
ThemeLine+
ggtitle("The 2022 Xayaburi Hydro Power Plant gen. profile \nat <span style = 'color: red'>minimum EGAT net gen.</span> at <span style = 'color: dodgerblue'> 11,547.85 MW </span> on <span style = 'color: red'> 1 Jan 2022 @ 12:30 PM </span>")+
labs(x = NULL,
y = "Electricity generation (MW)")
) %>%
style(showlegend = FALSE)
ggplotly(
xybprofile2021 %>%
filter(day == 3 & month == 4 & year == 2021) %>%
ggplot(aes(x = timestamp, y = xyb_h))+
geom_line(aes(color = "red"),
show.legend = FALSE)+
geom_hline(yintercept = 0)+
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M")+
ThemeLine+
ggtitle("The 2021 Xayaburi Hydro Power Plant gen. profile \nat <span style = 'color: red'>Peak EGAT net gen. </span> at <span style = 'color: dodgerblue'> 30,135 MW </span> on <span style = 'color: red'> 3 Apr 2021 @ 21:00 PM </span>")+
labs(x = NULL,
y = "Electricity generation (MW)"
)
) %>%
style(showlegend = FALSE)
ggplotly(
xybprofile2022 %>%
filter(day == 27 & month == 4 & year == 2022) %>%
ggplot(aes(x = timestamp, y = xyb_h))+
geom_line(aes(color = "red"),
show.legend = FALSE)+
geom_hline(yintercept = 0)+
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M")+
ThemeLine+
ggtitle("The 2022 Xayaburi Hydro Power Plant gen. profile \nat <span style = 'color: red'>Peak EGAT net gen. </span> at <span style = 'color: dodgerblue'> 32,254.5 MW </span> on <span style = 'color: red'> 27 Apr 2022 @ 22:30 PM </span>")+
labs(x = NULL,
y = "Electricity generation (MW)"
)
) %>%
style(showlegend = FALSE)
vrkprofile2021 <-
read_excel("rawdata/VRK_01012021_31122021.xlsx") %>%
rename_all(tolower) %>%
mutate(timestamp = as.POSIXct(timestamp, format = "%d-%b-%Y %H:%M", tz = "UTC"),
date = as.Date(timestamp, format = "%d-%b-%Y"),
time = format(as.POSIXct(timestamp), format = "%H:%M:%S"),
year = year(timestamp),
month = month(timestamp),
weekday = weekdays(timestamp),
yday = yday(timestamp),
day = day(timestamp),
hour = hour(timestamp),
minute = minute(timestamp)) %>%
filter(minute == "30" | minute =="0") %>%
mutate(season = if_else(month %in%c("3","4","5"), "Summer",
if_else(month %in% c("6","7","8","9","10"), "Rainy",
if_else(month %in% c("11","12","1","2"), "Winter", "Others"))),.after = "date")
vrkprofile2022 <-
read_excel("rawdata/VRK_01012022_31122022.xlsx") %>%
rename_all(tolower) %>%
mutate(timestamp = as.POSIXct(timestamp, format = "%d-%b-%Y %H:%M", tz = "UTC"),
date = as.Date(timestamp, format = "%d-%b-%Y"),
time = format(as.POSIXct(timestamp), format = "%H:%M:%S"),
year = year(timestamp),
month = month(timestamp),
weekday = weekdays(timestamp),
yday = yday(timestamp),
day = day(timestamp),
hour = hour(timestamp),
minute = minute(timestamp)) %>%
filter(minute == "30" | minute =="0") %>%
mutate(season = if_else(month %in%c("3","4","5"), "Summer",
if_else(month %in% c("6","7","8","9","10"), "Rainy",
if_else(month %in% c("11","12","1","2"), "Winter", "Others"))),.after = "date")
ggplotly(
vrkprofile2021 %>%
filter(day == 1 & month == 1 & year == 2021) %>%
ggplot(aes(x = timestamp, y = xyb_h))+
geom_line(aes(color = "red"),
show.legend = FALSE)+
geom_hline(yintercept = 0)+
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M")+
ThemeLine+
ggtitle("The 2021 Vajiralongkorn Hydro Power Plant gen. profile \nat <span style = 'color: red'>minimum EGAT net gen.</span> at <span style = 'color: dodgerblue'> 9,876 MW </span> on <span style = 'color: red'> 1 Jan 2021 @ 12:30 PM </span>")+
labs(x = NULL,
y = "Electricity generation (MW)")
) %>%
style(showlegend = FALSE)
ggplotly(
vrkprofile2021 %>%
filter(day == 1 & month == 1 & year == 2021) %>%
ggplot(aes(x = timestamp, y = vrk_h))+
geom_line(aes(color = "red"),
show.legend = FALSE)+
geom_hline(yintercept = 0)+
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M")+
ThemeLine+
ggtitle("The 2021 Vajiralongkorn Hydro Power Plant gen. profile \nat <span style = 'color: red'>minimum EGAT net gen.</span> at <span style = 'color: dodgerblue'> 9,876 MW </span> on <span style = 'color: red'> 1 Jan 2021 @ 12:30 PM </span>")+
labs(x = NULL,
y = "Electricity generation (MW)")
) %>%
style(showlegend = FALSE)
ggplotly(
vrkprofile2022 %>%
filter(day == 1 & month == 1 & year == 2022) %>%
ggplot(aes(x = timestamp, y = vrk_h))+
geom_line(aes(color = "red"),
show.legend = FALSE)+
geom_hline(yintercept = 0)+
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M")+
ThemeLine+
ggtitle("The 2022 Vajiralongkorn Hydro Power Plant gen. profile \nat <span style = 'color: red'>minimum EGAT net gen.</span> at <span style = 'color: dodgerblue'> 11,547.85 MW </span> on <span style = 'color: red'> 1 Jan 2022 @ 12:30 PM </span>")+
labs(x = NULL,
y = "Electricity generation (MW)")
) %>%
style(showlegend = FALSE)
ggplotly(
vrkprofile2021 %>%
filter(day == 3 & month == 4 & year == 2021) %>%
ggplot(aes(x = timestamp, y = vrk_h))+
geom_line(aes(color = "red"),
show.legend = FALSE)+
geom_hline(yintercept = 0)+
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M")+
ThemeLine+
ggtitle("The 2021 Vajiralongkorn Hydro Power Plant gen. profile \nat <span style = 'color: red'>Peak EGAT net gen. </span> at <span style = 'color: dodgerblue'> 30,135 MW </span> on <span style = 'color: red'> 3 Apr 2021 @ 21:00 PM </span>")+
labs(x = NULL,
y = "Electricity generation (MW)"
)
) %>%
style(showlegend = FALSE)
ggplotly(
vrkprofile2022 %>%
filter(day == 27 & month == 4 & year == 2022) %>%
ggplot(aes(x = timestamp, y = vrk_h))+
geom_line(aes(color = "red"),
show.legend = FALSE)+
geom_hline(yintercept = 0)+
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M")+
ThemeLine+
ggtitle("The 2022 Vajiralongkorn Hydro Power Plant gen. profile \nat <span style = 'color: red'>Peak EGAT net gen. </span> at <span style = 'color: dodgerblue'> 32,254.5 MW </span> on <span style = 'color: red'> 27 Apr 2022 @ 22:30 PM </span>")+
labs(x = NULL,
y = "Electricity generation (MW)"
)
) %>%
style(showlegend = FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(ggtext)
library(plotly)
ThemeLine <-
theme_bw() +
theme(
panel.border=element_rect(fill=NA),
panel.grid.minor = element_line(color = NA),
#    axis.title=element_text(size=5),
#    axis.text.x = element_text(hjust=1,size = 10, angle = 0),
axis.line=element_line(colour="black"),
panel.background=element_rect(fill = "white"),
panel.grid.major.x=element_line(linetype="dashed",colour="grey",linewidth = 0.5),
panel.grid.major.y = element_blank(),
# panel.grid.major=element_blank(),
strip.background=element_rect(fill="white", colour="white"),
strip.text.x = element_text(size=10, colour = "black", angle = 0,face="bold"),
axis.text.x=element_text(size = 10,angle=45, vjust=0.9, hjust=1, margin = unit(c(t = 0.3, r = 0, b = 0, l = 0), "cm")),
axis.text.y=element_text(size = 10,margin = unit(c(t = 0, r = 0.3, b = 0, l = 0), "cm")),
legend.text = element_text(size = 10),
legend.title = element_text(size = 10),
axis.ticks.length=unit(-0.15,"cm")
)
linepalette1 <- c("#4DAF4A","#FF7F00","#377EB8","#E41A1C","#984EA3","#F781BF","#8DD3C7","#FB8072","#80B1D3","#FDB462","#B3DE69","#FCCDE5","#D9D9D9","#BC80BD","#CCEBC5","#FFED6F","#7f878f","#A65628","#FFFF33")
linepalette2 <- c("#E41A1C","#FF7F00","#377EB8","#B3DE69","#4DAF4A","#984EA3","#F781BF","#8DD3C7","#FB8072","#80B1D3","#FDB462","#FCCDE5","#D9D9D9","#BC80BD","#CCEBC5","#FFED6F","#7f878f","#A65628","#FFFF33")
bbprofile2021 <-
read_excel("rawdata/BB_01012021_31122021.xlsx") %>%
rename_all(tolower) %>%
mutate(timestamp = as.POSIXct(timestamp, format = "%d-%b-%Y %H:%M", tz = "UTC"),
date = as.Date(timestamp, format = "%d-%b-%Y"),
time = format(as.POSIXct(timestamp), format = "%H:%M:%S"),
year = year(timestamp),
month = month(timestamp),
weekday = weekdays(timestamp),
yday = yday(timestamp),
day = day(timestamp),
hour = hour(timestamp),
minute = minute(timestamp)) %>%
filter(minute == "30" | minute =="0") %>%
mutate(season = if_else(month %in%c("3","4","5"), "Summer",
if_else(month %in% c("6","7","8","9","10"), "Rainy",
if_else(month %in% c("11","12","1","2"), "Winter", "Others"))),.after = "date")
bbprofile2022 <-
read_excel("rawdata/BB_01012022_31122022.xlsx") %>%
rename_all(tolower) %>%
mutate(timestamp = as.POSIXct(timestamp, format = "%d-%b-%Y %H:%M", tz = "UTC"),
date = as.Date(timestamp, format = "%d-%b-%Y"),
time = format(as.POSIXct(timestamp), format = "%H:%M:%S"),
year = year(timestamp),
month = month(timestamp),
weekday = weekdays(timestamp),
yday = yday(timestamp),
day = day(timestamp),
hour = hour(timestamp),
minute = minute(timestamp)) %>%
filter(minute == "30" | minute =="0") %>%
mutate(season = if_else(month %in%c("3","4","5"), "Summer",
if_else(month %in% c("6","7","8","9","10"), "Rainy",
if_else(month %in% c("11","12","1","2"), "Winter", "Others"))),.after = "date")
ggplotly(
bbprofile2021 %>%
filter(day == 1 & month == 1 & year == 2021) %>%
ggplot(aes(x = timestamp, y = bb_h))+
geom_line(aes(color = "red"),
show.legend = FALSE)+
geom_hline(yintercept = 0)+
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M")+
ThemeLine+
ggtitle("The 2021 Bhumibol Hydro Power Plant gen. profile \nat <span style = 'color: red'>minimum EGAT net gen.</span> at <span style = 'color: dodgerblue'> 9,876 MW </span> on <span style = 'color: red'> 1 Jan 2021 @ 12:30 PM </span>")+
labs(x = NULL,
y = "Electricity generation (MW)")
) %>%
style(showlegend = FALSE)
ggplotly(
bbprofile2022 %>%
filter(day == 1 & month == 1 & year == 2022) %>%
ggplot(aes(x = timestamp, y = bb_h))+
geom_line(aes(color = "red"),
show.legend = FALSE)+
geom_hline(yintercept = 0)+
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M")+
ThemeLine+
ggtitle("The 2022 Bhumibol Hydro Power Plant gen. profile \nat <span style = 'color: red'>minimum EGAT net gen.</span> at <span style = 'color: dodgerblue'> 11,547.85 MW </span> on <span style = 'color: red'> 1 Jan 2022 @ 12:30 PM </span>")+
labs(x = NULL,
y = "Electricity generation (MW)")
) %>%
style(showlegend = FALSE)
ggplotly(
bbprofile2021 %>%
filter(day == 3 & month == 4 & year == 2021) %>%
ggplot(aes(x = timestamp, y = bb_h))+
geom_line(aes(color = "red"),
show.legend = FALSE)+
geom_hline(yintercept = 0)+
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M")+
ThemeLine+
ggtitle("The 2021 Bhumibol Hydro Power Plant gen. profile \nat <span style = 'color: red'>Peak EGAT net gen. </span> at <span style = 'color: dodgerblue'> 30,135 MW </span> on <span style = 'color: red'> 3 Apr 2021 @ 21:00 PM </span>")+
labs(x = NULL,
y = "Electricity generation (MW)"
)
) %>%
style(showlegend = FALSE)
ggplotly(
bbprofile2022 %>%
filter(day == 27 & month == 4 & year == 2022) %>%
ggplot(aes(x = timestamp, y = bb_h))+
geom_line(aes(color = "red"),
show.legend = FALSE)+
geom_hline(yintercept = 0)+
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M")+
ThemeLine+
ggtitle("The 2022 Bhumibol Hydro Power Plant gen. profile \nat <span style = 'color: red'>Peak EGAT net gen. </span> at <span style = 'color: dodgerblue'> 32,254.5 MW </span> on <span style = 'color: red'> 27 Apr 2022 @ 22:30 PM </span>")+
labs(x = NULL,
y = "Electricity generation (MW)"
)
) %>%
style(showlegend = FALSE)
